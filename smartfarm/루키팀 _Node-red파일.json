[
    {
        "id": "c9e36356ff30d075",
        "type": "tab",
        "label": "플로우 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "60127d0edadeead7",
        "type": "mqtt in",
        "z": "c9e36356ff30d075",
        "name": "",
        "topic": "Sensor/Environment/Humidity",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "0f7cbe15dd4f4e4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "eaa9c8fe84a1270a",
                "e927680912b93ca6",
                "87ace98c55164133",
                "86e074ce2eb8a486"
            ]
        ]
    },
    {
        "id": "eaa9c8fe84a1270a",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 160,
        "wires": []
    },
    {
        "id": "1ba679abf5999a2a",
        "type": "mqtt out",
        "z": "c9e36356ff30d075",
        "name": "Sensor/Environment/Humidity/Send",
        "topic": "Sensor/Environment/Humidity/Send",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f7cbe15dd4f4e4c",
        "x": 720,
        "y": 240,
        "wires": []
    },
    {
        "id": "e927680912b93ca6",
        "type": "function",
        "z": "c9e36356ff30d075",
        "name": "Humidity",
        "func": "var Humidity = parseFloat(msg.payload);\n\nif (Humidity >= 70){\n    let newMsg = {\n        topic: \"Sensor/Environment/Humidity/Send\",\n        payload: \"Humidity High\"\n    };\n\n    let textMsg = {\n        payload: \"습도가 높습니다 !\"\n    };\n    msg.color = \"red\";\n    return [newMsg, textMsg, msg];\n}\n\nelse if (Humidity < 70 && Humidity >= 40){\n    let newMsg = {\n        topic: \"Sensor/Environment/Humidity/Send\",\n        payload: \"Humidity Normal\"\n    };\n    msg.color = \"green\";\n    return [newMsg,null];\n}\n\nelse {\n    let newMsg = {\n        topic: \"Sensor/Environment/Humidity/Send\",\n        payload: \"Humidity Low\"\n    };\n    return [newMsg,null];\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "1ba679abf5999a2a",
                "2311770123759674",
                "4b158406e9e9dcfc"
            ]
        ]
    },
    {
        "id": "2311770123759674",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 300,
        "wires": []
    },
    {
        "id": "bc93bce5f4f9aaa0",
        "type": "mqtt in",
        "z": "c9e36356ff30d075",
        "name": "",
        "topic": "Sensor/Environment/CDS",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "0f7cbe15dd4f4e4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 520,
        "wires": [
            [
                "4a06a070b2cba58a",
                "76c1c3f485495e29",
                "8e4769a4c9faa9df"
            ]
        ]
    },
    {
        "id": "4a06a070b2cba58a",
        "type": "function",
        "z": "c9e36356ff30d075",
        "name": "cdsvl",
        "func": "var cdsValue = msg.payload;\n\nif (cdsValue >= 2000) {\n    let newMsg = {\n        topic: \"Sensor/Environment/CDS/Send\",  // 여기에 원하는 MQTT 토픽 입력\n        payload: \"LED ON\"\n    };\n    return newMsg;\n} else if (cdsValue < 1101){\n    let newMsg = {\n        topic: \"Sensor/Environment/CDS/Send\",  // 여기에 원하는 MQTT 토픽 입력\n        payload: \"LED OFF\"\n    };\n    return newMsg;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 520,
        "wires": [
            [
                "ed2f3006c5cd2a0a",
                "18e92c9f65d4c396"
            ]
        ]
    },
    {
        "id": "76c1c3f485495e29",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 400,
        "wires": []
    },
    {
        "id": "ed2f3006c5cd2a0a",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 560,
        "wires": []
    },
    {
        "id": "46e8571ad9c538e5",
        "type": "mqtt in",
        "z": "c9e36356ff30d075",
        "name": "",
        "topic": "Sensor/Environment/WaterLevel",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "0f7cbe15dd4f4e4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "2dad5fc6d5b40b54",
                "a209124fbae07d9d",
                "23909220cacb580f"
            ]
        ]
    },
    {
        "id": "2dad5fc6d5b40b54",
        "type": "function",
        "z": "c9e36356ff30d075",
        "name": "waterlevel",
        "func": "var waterlevel = msg.payload;\n\nif (waterlevel <= 3000) {\n    msg.payload = \"Water Level Low\";\n    return msg;\n}\nelse if(waterlevel > 3000 && waterlevel <= 4000 ) {\n    msg.payload = \"Water Enough\"\n    return msg;\n}\nelse {\n    msg.payload = \"Water High !\"\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 880,
        "wires": [
            [
                "6c9538f0ee10c8cc",
                "a05cf9c2226dbe5f",
                "e03e962cdc1652b5"
            ]
        ]
    },
    {
        "id": "a209124fbae07d9d",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 800,
        "wires": []
    },
    {
        "id": "6c9538f0ee10c8cc",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 960,
        "wires": []
    },
    {
        "id": "b1467b250bbfb1f3",
        "type": "mqtt in",
        "z": "c9e36356ff30d075",
        "name": "",
        "topic": "Sensor/Environment/SoilMoisture",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "0f7cbe15dd4f4e4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 720,
        "wires": [
            [
                "df716360fbe9ebab",
                "c69e9e6c506bd61c",
                "d8d0208489265e26"
            ]
        ]
    },
    {
        "id": "df716360fbe9ebab",
        "type": "function",
        "z": "c9e36356ff30d075",
        "name": "soil_moisture",
        "func": "var soil_moisture = parseInt(msg.payload, 10);\n\nif (soil_moisture < 41){\n    let newMsg ={\n        topic: \"Sensor/Environment/SoliMoisture/Send\",\n        payload: \"Pum ON\"\n    };\n    return newMsg;\n}\nelse {\n    let newMsg = {\n        \n        topic: \"Sensor/Environment/SoliMoisture/Send\",\n        payload: \"Pum OFF\"\n    };\n    return newMsg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 700,
        "wires": [
            [
                "e746186f7516dece",
                "7d1b0b38939519ec"
            ]
        ]
    },
    {
        "id": "c69e9e6c506bd61c",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 620,
        "wires": []
    },
    {
        "id": "e746186f7516dece",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 780,
        "wires": []
    },
    {
        "id": "87ace98c55164133",
        "type": "ui_chart",
        "z": "c9e36356ff30d075",
        "name": "",
        "group": "72f86ff8c43b2564",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "실시간 온습도",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 400,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "86e074ce2eb8a486",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "72f86ff8c43b2564",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "현재습도",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 400,
        "y": 280,
        "wires": []
    },
    {
        "id": "8e4769a4c9faa9df",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "8c49d7b3bcdd1158",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "빛 세기",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 400,
        "y": 580,
        "wires": []
    },
    {
        "id": "d8d0208489265e26",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "8c49d7b3bcdd1158",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "토양습도",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 380,
        "y": 760,
        "wires": []
    },
    {
        "id": "23909220cacb580f",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "8c49d7b3bcdd1158",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "수위",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 350,
        "y": 960,
        "wires": []
    },
    {
        "id": "4b158406e9e9dcfc",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "dc5f4cdfbb6b4fcc",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "습도 경고",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "<div style=\"color: {{msg.color}};\"></div>",
        "style": false,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#ff0000",
        "x": 600,
        "y": 140,
        "wires": []
    },
    {
        "id": "1075e82e7d809c2d",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "72f86ff8c43b2564",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "현재온도",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1220,
        "y": 400,
        "wires": []
    },
    {
        "id": "87c0c70a0c968cd1",
        "type": "mqtt in",
        "z": "c9e36356ff30d075",
        "name": "",
        "topic": "Sensor/Environment/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f7cbe15dd4f4e4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 950,
        "y": 380,
        "wires": [
            [
                "1075e82e7d809c2d",
                "87ace98c55164133"
            ]
        ]
    },
    {
        "id": "aa8f1ab856d825db",
        "type": "mqtt in",
        "z": "c9e36356ff30d075",
        "name": "",
        "topic": "Sensor/Environment/NeoPixelLED",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f7cbe15dd4f4e4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 920,
        "y": 520,
        "wires": [
            [
                "4e5672d99e08b5a7"
            ]
        ]
    },
    {
        "id": "533acdc0d6c4699b",
        "type": "mqtt in",
        "z": "c9e36356ff30d075",
        "name": "",
        "topic": "Sensor/Environment/waterPum",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f7cbe15dd4f4e4c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 930,
        "y": 600,
        "wires": [
            [
                "5c74195ee0495c2d"
            ]
        ]
    },
    {
        "id": "4e5672d99e08b5a7",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "8c49d7b3bcdd1158",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "NeoPixel LED",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1180,
        "y": 520,
        "wires": []
    },
    {
        "id": "5c74195ee0495c2d",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "8c49d7b3bcdd1158",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "워터펌프",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "18e92c9f65d4c396",
        "type": "mqtt out",
        "z": "c9e36356ff30d075",
        "name": "Sensor/Environment/CDS/Send",
        "topic": "Sensor/Environment/CDS/Send",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f7cbe15dd4f4e4c",
        "x": 650,
        "y": 460,
        "wires": []
    },
    {
        "id": "7d1b0b38939519ec",
        "type": "mqtt out",
        "z": "c9e36356ff30d075",
        "name": "Sensor/Environment/SoliMoisture/Send",
        "topic": "Sensor/Environment/SoliMoisture/Send",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f7cbe15dd4f4e4c",
        "x": 740,
        "y": 680,
        "wires": []
    },
    {
        "id": "a05cf9c2226dbe5f",
        "type": "mqtt out",
        "z": "c9e36356ff30d075",
        "name": "Sensor/Environment/waterlevel/Send",
        "topic": "Sensor/Environment/waterlevel/Send",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f7cbe15dd4f4e4c",
        "x": 670,
        "y": 860,
        "wires": []
    },
    {
        "id": "98981a869651c835",
        "type": "function",
        "z": "c9e36356ff30d075",
        "name": "Temper",
        "func": "var Temperature = 30;\n\nif (Temperature >= 27){\n    let newMsg = {\n        topic: \"Sensor/Environment/Temperature/Send\",\n        payload: \"Temperature High\"\n    };\n\n    let textMsg = {\n        payload: \"온도가 높습니다 !\"\n    };\n\n    return [newMsg, textMsg];\n}\n\nelse if (Temperature < 26 && Temperature >= 20){\n    let newMsg = {\n        topic: \"Sensor/Environment/Temperature/Send\",\n        payload: \"Temperature Normal\"\n    };\n    return newMsg;\n}\n\nelse if( Temperature <= 19){\n    let newMsg = {\n        topic: \"Sensor/Environment/Temperature/Send\",\n        payload: \"Temperature Low\"\n    };\n    return newMsg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "4883d451ae87729b",
                "43dfedd1dc90e152",
                "5975bf93aeb3e8b3"
            ]
        ]
    },
    {
        "id": "4883d451ae87729b",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "dc5f4cdfbb6b4fcc",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "온도 경고",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1340,
        "y": 180,
        "wires": []
    },
    {
        "id": "43dfedd1dc90e152",
        "type": "mqtt out",
        "z": "c9e36356ff30d075",
        "name": "Sensor/Environment/Temperature/Send",
        "topic": "Sensor/Environment/Temperature/Send",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f7cbe15dd4f4e4c",
        "x": 1360,
        "y": 280,
        "wires": []
    },
    {
        "id": "e03e962cdc1652b5",
        "type": "ui_text",
        "z": "c9e36356ff30d075",
        "group": "dc5f4cdfbb6b4fcc",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "수위 경고",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 760,
        "y": 940,
        "wires": []
    },
    {
        "id": "5975bf93aeb3e8b3",
        "type": "debug",
        "z": "c9e36356ff30d075",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 100,
        "wires": []
    },
    {
        "id": "b2c9c39811ef77f3",
        "type": "inject",
        "z": "c9e36356ff30d075",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Temperature",
        "x": 810,
        "y": 320,
        "wires": [
            [
                "98981a869651c835"
            ]
        ]
    },
    {
        "id": "d036a5a664298e8f",
        "type": "ui_spacer",
        "z": "c9e36356ff30d075",
        "name": "spacer",
        "group": "8c49d7b3bcdd1158",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "0f7cbe15dd4f4e4c",
        "type": "mqtt-broker",
        "name": "jiji",
        "broker": "158.180.89.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "72f86ff8c43b2564",
        "type": "ui_group",
        "name": "온도 및 습도",
        "tab": "700b2ee8ecba4b73",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8c49d7b3bcdd1158",
        "type": "ui_group",
        "name": "센서 상태",
        "tab": "700b2ee8ecba4b73",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dc5f4cdfbb6b4fcc",
        "type": "ui_group",
        "name": "경고",
        "tab": "700b2ee8ecba4b73",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "700b2ee8ecba4b73",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]